interactions:
- request:
    body: '{"input": ["Perform a search on specific topics."], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '115'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      7,\n    \"total_tokens\": 7\n  }\n}\n"
    headers:
      CF-RAY:
      - 929abab459817e07-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:20 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=wQNqc3BNcaCzhFR4owoCJRMIvs7PWqvy7xmWaIr4k.A-1743538220-1.0.1.1-AIxSGyU_kRiSsc4DYqsunqMwAlAn0fhT.P.7_bBBWTyHeVrexxOSRpm5yj6QmiIVcYwEgdJqk9EsHBy9LfadhgMJ5w8LIrHF_sxBFAXOOxc;
        path=/; expires=Tue, 01-Apr-25 20:40:20 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=g5w7.LJsKZSYhPzW6M1n.OyrMWQSUF5zX.cFK1vZrQI-1743538220809-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '308'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-68459c4c98-bfmcm
      x-envoy-upstream-service-time:
      - '243'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999991'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_51cfe3e45d22af953af55f6708e77623
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["Perform a search on specific topics."], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '115'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      7,\n    \"total_tokens\": 7\n  }\n}\n"
    headers:
      CF-RAY:
      - 929abab86d4a7e1b-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:21 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=MCDkRAmvHC26iz7BEoKzXwq4j5v_FEX5IQepnW5ARp4-1743538221-1.0.1.1-GXJkwk8HCFy9W0tA9R.s3NWzCNJ7wCiaUFu4YCbra4nQNVJa_mN3jdnmfREeET4QfWbYGCQXuM5GHffwtQZ_W1EV3mUC4JFa3w5CCDqO41Y;
        path=/; expires=Tue, 01-Apr-25 20:40:21 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=mRF3.ZghYObsvTKqmSfcqSbJFV0SBPVk2Psc.9DVGlE-1743538221434-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '156'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-7c6fb6444f-m8b65
      x-envoy-upstream-service-time:
      - '132'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999991'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_463b788a4cc327763e9544976b2fe7ce
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: !!binary |
      CtoMCiQKIgoMc2VydmljZS5uYW1lEhIKEGNyZXdBSS10ZWxlbWV0cnkSsQwKEgoQY3Jld2FpLnRl
      bGVtZXRyeRKXCAoQllrSJs4siWPoysCAkdyzdhIIeP9LvWGg1D0qDENyZXcgQ3JlYXRlZDABOeAu
      xRLASjIYQUh77RLASjIYShsKDmNyZXdhaV92ZXJzaW9uEgkKBzAuMTA4LjBKGgoOcHl0aG9uX3Zl
      cnNpb24SCAoGMy4xMi45Si4KCGNyZXdfa2V5EiIKIDA3YTcxNzY4Y2M0YzkzZWFiM2IzMWUzYzhk
      MjgzMmM2SjEKB2NyZXdfaWQSJgokOWUwNDE3NDgtZTg2MS00M2YzLWE4ZTYtMTA4N2I3NjA1MTE1
      ShwKDGNyZXdfcHJvY2VzcxIMCgpzZXF1ZW50aWFsShEKC2NyZXdfbWVtb3J5EgIQAUoaChRjcmV3
      X251bWJlcl9vZl90YXNrcxICGAFKGwoVY3Jld19udW1iZXJfb2ZfYWdlbnRzEgIYAUo6ChBjcmV3
      X2ZpbmdlcnByaW50EiYKJDlhODQwMjI3LTQwY2UtNDU4OC1iYTAzLTBlYzZlMjQzMDdjMUo7Chtj
      cmV3X2ZpbmdlcnByaW50X2NyZWF0ZWRfYXQSHAoaMjAyNS0wNC0wMVQxNzowOTo1NC4xMzIwMzlK
      ywIKC2NyZXdfYWdlbnRzErsCCrgCW3sia2V5IjogIjAyZGYxM2UzNjcxMmFiZjUxZDIzOGZlZWJh
      YjFjYTI2IiwgImlkIjogImNlMjE2ZTU4LTY1MDgtNDQ0My1iZTY0LWUwNzVhNTQ5YzMzZCIsICJy
      b2xlIjogIlJlc2VhcmNoZXIiLCAidmVyYm9zZT8iOiB0cnVlLCAibWF4X2l0ZXIiOiAyNSwgIm1h
      eF9ycG0iOiBudWxsLCAiZnVuY3Rpb25fY2FsbGluZ19sbG0iOiAiIiwgImxsbSI6ICJncHQtNG8i
      LCAiZGVsZWdhdGlvbl9lbmFibGVkPyI6IGZhbHNlLCAiYWxsb3dfY29kZV9leGVjdXRpb24/Ijog
      ZmFsc2UsICJtYXhfcmV0cnlfbGltaXQiOiAyLCAidG9vbHNfbmFtZXMiOiBbXX1dSv8BCgpjcmV3
      X3Rhc2tzEvABCu0BW3sia2V5IjogIjdiNDJkZjNjM2M3NGMyMWM4OTQ4MGUwYzA3MDUzODVmIiwg
      ImlkIjogImVmMDNjMDliLTIwNGQtNGU2Yy04NDIwLTQyNmNmOWM4OGFmYyIsICJhc3luY19leGVj
      dXRpb24/IjogZmFsc2UsICJodW1hbl9pbnB1dD8iOiBmYWxzZSwgImFnZW50X3JvbGUiOiAiUmVz
      ZWFyY2hlciIsICJhZ2VudF9rZXkiOiAiMDJkZjEzZTM2NzEyYWJmNTFkMjM4ZmVlYmFiMWNhMjYi
      LCAidG9vbHNfbmFtZXMiOiBbXX1degIYAYUBAAEAABKABAoQZo4JZzOQlEm7ZP/lMPxN9hIIymaC
      IpHXF4cqDFRhc2sgQ3JlYXRlZDABObhUIRPASjIYQQgSIxPASjIYSi4KCGNyZXdfa2V5EiIKIDA3
      YTcxNzY4Y2M0YzkzZWFiM2IzMWUzYzhkMjgzMmM2SjEKB2NyZXdfaWQSJgokOWUwNDE3NDgtZTg2
      MS00M2YzLWE4ZTYtMTA4N2I3NjA1MTE1Si4KCHRhc2tfa2V5EiIKIDdiNDJkZjNjM2M3NGMyMWM4
      OTQ4MGUwYzA3MDUzODVmSjEKB3Rhc2tfaWQSJgokZWYwM2MwOWItMjA0ZC00ZTZjLTg0MjAtNDI2
      Y2Y5Yzg4YWZjSjoKEGNyZXdfZmluZ2VycHJpbnQSJgokOWE4NDAyMjctNDBjZS00NTg4LWJhMDMt
      MGVjNmUyNDMwN2MxSjoKEHRhc2tfZmluZ2VycHJpbnQSJgokNzcwMDBjZjktZjVlNC00MDJhLTg1
      MTgtNzFhMzZhZTc2MmQwSjsKG3Rhc2tfZmluZ2VycHJpbnRfY3JlYXRlZF9hdBIcChoyMDI1LTA0
      LTAxVDE3OjA5OjU0LjEzMTE4NUo7ChFhZ2VudF9maW5nZXJwcmludBImCiQ0Y2Y4OTc4Yy1iN2M4
      LTRiMjUtODYxMC1lNWE4NmMxOTYwNzB6AhgBhQEAAQAA
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1629'
      Content-Type:
      - application/x-protobuf
      User-Agent:
      - OTel-OTLP-Exporter-Python/1.31.1
    method: POST
    uri: https://telemetry.crewai.com:4319/v1/traces
  response:
    body:
      string: "\n\0"
    headers:
      Content-Length:
      - '2'
      Content-Type:
      - application/x-protobuf
      Date:
      - Tue, 01 Apr 2025 20:10:22 GMT
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are Researcher. You are
      a researcher at a leading tech think tank.\nYour personal goal is: Search relevant
      data and provide results\nTo give my best complete final answer to the task
      respond using the exact following format:\n\nThought: I now can give a great
      answer\nFinal Answer: Your final answer must be the great and the most complete
      as possible, it must be outcome described.\n\nI MUST use these formats, my job
      depends on it!"}, {"role": "user", "content": "\nCurrent Task: Perform a search
      on specific topics.\n\nThis is the expected criteria for your final answer:
      A list of relevant URLs based on the search query.\nyou MUST return the actual
      complete content as the final answer, not a summary.\n\n# Useful context: \nExternal
      memories:\n\n\nBegin! This is VERY important to you, use the tools available
      and give your best Final Answer, your job depends on it!\n\nThought:"}], "model":
      "gpt-4o", "stop": ["\nObservation:"]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '984'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-BHcE9342OpU72PR82mknhgcVzhK5H\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1743538221,\n  \"model\": \"gpt-4o-2024-08-06\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"Thought: I need to gather relevant URLs
      based on the search query provided in order to fulfill the task requirements.\\n\\nFinal
      Answer: The search query or topics were not specified. Please provide specific
      topics or search query to perform a search for relevant URLs.\",\n        \"refusal\":
      null,\n        \"annotations\": []\n      },\n      \"logprobs\": null,\n      \"finish_reason\":
      \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 185,\n    \"completion_tokens\":
      50,\n    \"total_tokens\": 235,\n    \"prompt_tokens_details\": {\n      \"cached_tokens\":
      0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\": {\n
      \     \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
      0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
      \"default\",\n  \"system_fingerprint\": \"fp_898ac29719\"\n}\n"
    headers:
      CF-RAY:
      - 929ababcdf9c7dfa-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:22 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=26AntG8LjHgDcgN0MYB7TgUTXmoUsQqg8yChWws9CAE-1743538222-1.0.1.1-jo5QRov4A_6L5CaGwhXx2I2aGHzSN6wvrS5Lt2yDpcV5vfTu3FlroYl2d4LBq.ySrtNMDxGQgpsA6fMg0z4iEOXpD5DT7CrJKWRNr4H7Y_k;
        path=/; expires=Tue, 01-Apr-25 20:40:22 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=.HNP7WFC.O40eZMPSJZ4USQu9SYczq5v794aRx34sZg-1743538222787-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '860'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '50000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '49999'
      x-ratelimit-remaining-tokens:
      - '149999788'
      x-ratelimit-reset-requests:
      - 1ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_bf03af6c68765e4393cb60521c5d99ec
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["Thought: I need to gather relevant URLs based on the search
      query provided in order to fulfill the task requirements.  Final Answer: The
      search query or topics were not specified. Please provide specific topics or
      search query to perform a search for relevant URLs."], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '344'
      content-type:
      - application/json
      cookie:
      - __cf_bm=wQNqc3BNcaCzhFR4owoCJRMIvs7PWqvy7xmWaIr4k.A-1743538220-1.0.1.1-AIxSGyU_kRiSsc4DYqsunqMwAlAn0fhT.P.7_bBBWTyHeVrexxOSRpm5yj6QmiIVcYwEgdJqk9EsHBy9LfadhgMJ5w8LIrHF_sxBFAXOOxc;
        _cfuvid=g5w7.LJsKZSYhPzW6M1n.OyrMWQSUF5zX.cFK1vZrQI-1743538220809-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      50,\n    \"total_tokens\": 50\n  }\n}\n"
    headers:
      CF-RAY:
      - 929abac4a8fc7e07-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:24 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '1403'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-69ff67f767-88tkx
      x-envoy-upstream-service-time:
      - '1369'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999934'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_5a1b9f49c2d200641e58e8cd95ef063a
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"messages": [{"role": "user", "content": "Assess the quality of the task
      completed based on the description, expected output, and actual results.\n\nTask
      Description:\nPerform a search on specific topics.\n\nExpected Output:\nA list
      of relevant URLs based on the search query.\n\nActual Output:\nThought: I need
      to gather relevant URLs based on the search query provided in order to fulfill
      the task requirements.\n\nFinal Answer: The search query or topics were not
      specified. Please provide specific topics or search query to perform a search
      for relevant URLs.\n\nPlease provide:\n- Bullet points suggestions to improve
      future similar tasks\n- A score from 0 to 10 evaluating on completion, quality,
      and overall performance- Entities extracted from the task output, if any, their
      type, description, and relationships"}], "model": "gpt-4o", "tool_choice": {"type":
      "function", "function": {"name": "TaskEvaluation"}}, "tools": [{"type": "function",
      "function": {"name": "TaskEvaluation", "description": "Correctly extracted `TaskEvaluation`
      with all the required parameters with correct types", "parameters": {"$defs":
      {"Entity": {"properties": {"name": {"description": "The name of the entity.",
      "title": "Name", "type": "string"}, "type": {"description": "The type of the
      entity.", "title": "Type", "type": "string"}, "description": {"description":
      "Description of the entity.", "title": "Description", "type": "string"}, "relationships":
      {"description": "Relationships of the entity.", "items": {"type": "string"},
      "title": "Relationships", "type": "array"}}, "required": ["name", "type", "description",
      "relationships"], "title": "Entity", "type": "object"}}, "properties": {"suggestions":
      {"description": "Suggestions to improve future similar tasks.", "items": {"type":
      "string"}, "title": "Suggestions", "type": "array"}, "quality": {"description":
      "A score from 0 to 10 evaluating on completion, quality, and overall performance,
      all taking into account the task description, expected output, and the result
      of the task.", "title": "Quality", "type": "number"}, "entities": {"description":
      "Entities extracted from the task output.", "items": {"$ref": "#/$defs/Entity"},
      "title": "Entities", "type": "array"}}, "required": ["entities", "quality",
      "suggestions"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2295'
      content-type:
      - application/json
      cookie:
      - __cf_bm=26AntG8LjHgDcgN0MYB7TgUTXmoUsQqg8yChWws9CAE-1743538222-1.0.1.1-jo5QRov4A_6L5CaGwhXx2I2aGHzSN6wvrS5Lt2yDpcV5vfTu3FlroYl2d4LBq.ySrtNMDxGQgpsA6fMg0z4iEOXpD5DT7CrJKWRNr4H7Y_k;
        _cfuvid=.HNP7WFC.O40eZMPSJZ4USQu9SYczq5v794aRx34sZg-1743538222787-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-BHcEDk89V0nWfSxs0BaUsqqVYrVxj\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1743538225,\n  \"model\": \"gpt-4o-2024-08-06\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": null,\n        \"tool_calls\": [\n          {\n
      \           \"id\": \"call_39zVeoea7WZ0hceVZTcAut7Z\",\n            \"type\":
      \"function\",\n            \"function\": {\n              \"name\": \"TaskEvaluation\",\n
      \             \"arguments\": \"{\\\"suggestions\\\":[\\\"Ensure that the search
      query or specific topics are provided before starting the task.\\\",\\\"Implement
      error handling to provide more useful output or alternatives when input is insufficient.\\\",\\\"Provide
      a fallback or a default set of topics in case none are provided.\\\",\\\"Clarify
      task requirements with stakeholders if the input parameters are unclear.\\\"],\\\"quality\\\":2,\\\"entities\\\":[{\\\"name\\\":\\\"search
      query\\\",\\\"type\\\":\\\"Requirement\\\",\\\"description\\\":\\\"A parameter
      needed to perform the search operation.\\\",\\\"relationships\\\":[\\\"Without
      this entity, the task cannot be completed.\\\"]},{\\\"name\\\":\\\"URLs\\\",\\\"type\\\":\\\"Output\\\",\\\"description\\\":\\\"The
      expected result from executing the search.\\\",\\\"relationships\\\":[\\\"Expected
      output when the search query is provided.\\\"]}]}\"\n            }\n          }\n
      \       ],\n        \"refusal\": null,\n        \"annotations\": []\n      },\n
      \     \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n
      \ \"usage\": {\n    \"prompt_tokens\": 332,\n    \"completion_tokens\": 137,\n
      \   \"total_tokens\": 469,\n    \"prompt_tokens_details\": {\n      \"cached_tokens\":
      0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\": {\n
      \     \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
      0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
      \"default\",\n  \"system_fingerprint\": \"fp_898ac29719\"\n}\n"
    headers:
      CF-RAY:
      - 929abad21a6b7dfa-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '2597'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '50000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '49999'
      x-ratelimit-remaining-tokens:
      - '149999807'
      x-ratelimit-reset-requests:
      - 1ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_a5c36be883759cbc3fec575604f8746e
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["search query(Requirement): A parameter needed to perform the
      search operation."], "model": "text-embedding-3-small", "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '157'
      content-type:
      - application/json
      cookie:
      - __cf_bm=MCDkRAmvHC26iz7BEoKzXwq4j5v_FEX5IQepnW5ARp4-1743538221-1.0.1.1-GXJkwk8HCFy9W0tA9R.s3NWzCNJ7wCiaUFu4YCbra4nQNVJa_mN3jdnmfREeET4QfWbYGCQXuM5GHffwtQZ_W1EV3mUC4JFa3w5CCDqO41Y;
        _cfuvid=mRF3.ZghYObsvTKqmSfcqSbJFV0SBPVk2Psc.9DVGlE-1743538221434-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      14,\n    \"total_tokens\": 14\n  }\n}\n"
    headers:
      CF-RAY:
      - 929abae38c117df4-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:28 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '557'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-d44cf9799-vc45q
      x-envoy-upstream-service-time:
      - '531'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999980'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_91c495419e7c55b5f7396854da1588bc
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["URLs(Output): The expected result from executing the search."],
      "model": "text-embedding-3-small", "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '139'
      content-type:
      - application/json
      cookie:
      - __cf_bm=MCDkRAmvHC26iz7BEoKzXwq4j5v_FEX5IQepnW5ARp4-1743538221-1.0.1.1-GXJkwk8HCFy9W0tA9R.s3NWzCNJ7wCiaUFu4YCbra4nQNVJa_mN3jdnmfREeET4QfWbYGCQXuM5GHffwtQZ_W1EV3mUC4JFa3w5CCDqO41Y;
        _cfuvid=mRF3.ZghYObsvTKqmSfcqSbJFV0SBPVk2Psc.9DVGlE-1743538221434-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"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\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      12,\n    \"total_tokens\": 12\n  }\n}\n"
    headers:
      CF-RAY:
      - 929abae938887df4-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:10:29 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '199'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-f47df6cdf-hhnd7
      x-envoy-upstream-service-time:
      - '105'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999984'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_cfdd836532f45e9c2f03d332153438f6
    http_version: HTTP/1.1
    status_code: 200
version: 1
