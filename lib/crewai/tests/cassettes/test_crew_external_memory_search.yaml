interactions:
- request:
    body: '{"input": ["Perform a search on specific topics."], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '115'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      7,\n    \"total_tokens\": 7\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab3befe357df5-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:35 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=PsKVaPzlM_GeWeRUNtFvPF72n01r_jzqeG7Nd55OxXA-1743537935-1.0.1.1-CUc1h3KzP5XGFkuuCjV.7PuG1UVO5JLw1RnRQSl9Y9FYi243JV2N8SShquwvQQupP.SoV.DsYSCjvB9EcJfU.aScJk6ZzFUl08bb6iX4jFY;
        path=/; expires=Tue, 01-Apr-25 20:35:35 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=JBKrDeaB9UHU9oVCftc2i1vJ5EJRmBVexQUQ0krQHmI-1743537935542-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '92'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-8486ff7cdd-lg68l
      x-envoy-upstream-service-time:
      - '55'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999991'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_4d6f5c4de9bf29c1124a4bf42f1786e9
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["Perform a search on specific topics."], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '115'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      7,\n    \"total_tokens\": 7\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab3c47e9a7df7-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:36 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=V7Ai6kTzure7ZHk8IX17a15p.gWeVtEIiLotdStYBRo-1743537936-1.0.1.1-TBIsRVaz6eWUMIWyet8Zw_P6HtLDDOql78aip91IzZPNUUxESD7kX1O2XR3HaLq4ugeNnViH18TPBQ0ds14IyZneU.aHcrI.u5GFz9YvlWk;
        path=/; expires=Tue, 01-Apr-25 20:35:36 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=WjlP.31F0xkBcHoootamO.xqZIkVNRPL3BnFKAqqPfk-1743537936351-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '67'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-69ff67f767-gmmbm
      x-envoy-upstream-service-time:
      - '54'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999991'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_64bc678b5b221dd23a8b36390722543f
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"messages": [{"role": "system", "content": "You are Researcher. You are
      a researcher at a leading tech think tank.\nYour personal goal is: Search relevant
      data and provide results\nTo give my best complete final answer to the task
      respond using the exact following format:\n\nThought: I now can give a great
      answer\nFinal Answer: Your final answer must be the great and the most complete
      as possible, it must be outcome described.\n\nI MUST use these formats, my job
      depends on it!"}, {"role": "user", "content": "\nCurrent Task: Perform a search
      on specific topics.\n\nThis is the expected criteria for your final answer:
      A list of relevant URLs based on the search query.\nyou MUST return the actual
      complete content as the final answer, not a summary.\n\n# Useful context: \nExternal
      memories:\n\n\nBegin! This is VERY important to you, use the tools available
      and give your best Final Answer, your job depends on it!\n\nThought:"}], "model":
      "gpt-4o", "stop": ["\nObservation:"]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '984'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Hxm6ignpjzUPY4_F0hNOxDI6blf0OOBnlpX09HJLkXw-1743537931-1.0.1.1-EnMojyC4HcsGaIfLZ3AM11JeKT5P2fCrPy4P_cEuqem7t6aJ66exdhSjbXn7cY_0WGDzFZMXOd2FiX1cdOOotV7bTaiKamm_kbxZ2AeH0DI;
        _cfuvid=0tT0dhP6be3yJlOYI.zGaiYhO_s63uZ7L9h2mjFuTUI-1743537931401-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-BHc9YxoRkcj33x1OBV1L5ojziP9dN\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1743537936,\n  \"model\": \"gpt-4o-2024-08-06\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"I now can give a great answer  \\nFinal
      Answer: I apologize for any misunderstanding, but as an AI language model without
      the ability to access external databases or search the web in real-time, I'm
      unable to perform a live search or provide URLs for content directly from the
      internet. However, I can assist you in crafting a strategic approach for conducting
      effective searches on specific topics using reliable sources, keywords, and
      search engines. If you need help with that, please let me know!\",\n        \"refusal\":
      null,\n        \"annotations\": []\n      },\n      \"logprobs\": null,\n      \"finish_reason\":
      \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 185,\n    \"completion_tokens\":
      96,\n    \"total_tokens\": 281,\n    \"prompt_tokens_details\": {\n      \"cached_tokens\":
      0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\": {\n
      \     \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
      0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
      \"default\",\n  \"system_fingerprint\": \"fp_898ac29719\"\n}\n"
    headers:
      CF-RAY:
      - 929ab3c68c837dee-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:38 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '1487'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '50000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '49999'
      x-ratelimit-remaining-tokens:
      - '149999788'
      x-ratelimit-reset-requests:
      - 1ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_476b2cf06441fd906f547a97aab2183d
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["I now can give a great answer   Final Answer: I apologize for
      any misunderstanding, but as an AI language model without the ability to access
      external databases or search the web in real-time, I''m unable to perform a
      live search or provide URLs for content directly from the internet. However,
      I can assist you in crafting a strategic approach for conducting effective searches
      on specific topics using reliable sources, keywords, and search engines. If
      you need help with that, please let me know!"], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '577'
      content-type:
      - application/json
      cookie:
      - __cf_bm=PsKVaPzlM_GeWeRUNtFvPF72n01r_jzqeG7Nd55OxXA-1743537935-1.0.1.1-CUc1h3KzP5XGFkuuCjV.7PuG1UVO5JLw1RnRQSl9Y9FYi243JV2N8SShquwvQQupP.SoV.DsYSCjvB9EcJfU.aScJk6ZzFUl08bb6iX4jFY;
        _cfuvid=JBKrDeaB9UHU9oVCftc2i1vJ5EJRmBVexQUQ0krQHmI-1743537935542-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      96,\n    \"total_tokens\": 96\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab3d2688b7df5-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:38 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '85'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-56dcf846c4-jktvz
      x-envoy-upstream-service-time:
      - '58'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999875'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_6492c852709d183324f649a5c4747c46
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: !!binary |
      CtoMCiQKIgoMc2VydmljZS5uYW1lEhIKEGNyZXdBSS10ZWxlbWV0cnkSsQwKEgoQY3Jld2FpLnRl
      bGVtZXRyeRKXCAoQE12zq2Dpddm6rQM3jyUyQxIIVBFCByfipUYqDENyZXcgQ3JlYXRlZDABOQAK
      mbh9SjIYQXizuLh9SjIYShsKDmNyZXdhaV92ZXJzaW9uEgkKBzAuMTA4LjBKGgoOcHl0aG9uX3Zl
      cnNpb24SCAoGMy4xMi45Si4KCGNyZXdfa2V5EiIKIDA3YTcxNzY4Y2M0YzkzZWFiM2IzMWUzYzhk
      MjgzMmM2SjEKB2NyZXdfaWQSJgokMGMxNGNhNGMtZjZkYy00ZWNiLTk2MDctODJiYWIxNDFlY2Ez
      ShwKDGNyZXdfcHJvY2VzcxIMCgpzZXF1ZW50aWFsShEKC2NyZXdfbWVtb3J5EgIQAUoaChRjcmV3
      X251bWJlcl9vZl90YXNrcxICGAFKGwoVY3Jld19udW1iZXJfb2ZfYWdlbnRzEgIYAUo6ChBjcmV3
      X2ZpbmdlcnByaW50EiYKJDU1YTQ2MWE0LWU2OTUtNDQ5Ny05YWE1LTg4YTA2NWE5MzA3OEo7Chtj
      cmV3X2ZpbmdlcnByaW50X2NyZWF0ZWRfYXQSHAoaMjAyNS0wNC0wMVQxNzowNTowOS4wODc2MjhK
      ywIKC2NyZXdfYWdlbnRzErsCCrgCW3sia2V5IjogIjAyZGYxM2UzNjcxMmFiZjUxZDIzOGZlZWJh
      YjFjYTI2IiwgImlkIjogImRkNmQzMTk3LWY3ZmYtNGFkMS05ZTQ3LTYxMjBhZTI1OGI1ZSIsICJy
      b2xlIjogIlJlc2VhcmNoZXIiLCAidmVyYm9zZT8iOiB0cnVlLCAibWF4X2l0ZXIiOiAyNSwgIm1h
      eF9ycG0iOiBudWxsLCAiZnVuY3Rpb25fY2FsbGluZ19sbG0iOiAiIiwgImxsbSI6ICJncHQtNG8i
      LCAiZGVsZWdhdGlvbl9lbmFibGVkPyI6IGZhbHNlLCAiYWxsb3dfY29kZV9leGVjdXRpb24/Ijog
      ZmFsc2UsICJtYXhfcmV0cnlfbGltaXQiOiAyLCAidG9vbHNfbmFtZXMiOiBbXX1dSv8BCgpjcmV3
      X3Rhc2tzEvABCu0BW3sia2V5IjogIjdiNDJkZjNjM2M3NGMyMWM4OTQ4MGUwYzA3MDUzODVmIiwg
      ImlkIjogImRlN2Q4ODY0LTQ0NWMtNDJlZC04ZTZjLTQ1ZmM2NDg4MGJjOCIsICJhc3luY19leGVj
      dXRpb24/IjogZmFsc2UsICJodW1hbl9pbnB1dD8iOiBmYWxzZSwgImFnZW50X3JvbGUiOiAiUmVz
      ZWFyY2hlciIsICJhZ2VudF9rZXkiOiAiMDJkZjEzZTM2NzEyYWJmNTFkMjM4ZmVlYmFiMWNhMjYi
      LCAidG9vbHNfbmFtZXMiOiBbXX1degIYAYUBAAEAABKABAoQvi5iu1qySL4dmpV96HtXshIIZN+m
      IpeCTD8qDFRhc2sgQ3JlYXRlZDABOdBLNrl9SjIYQcjtN7l9SjIYSi4KCGNyZXdfa2V5EiIKIDA3
      YTcxNzY4Y2M0YzkzZWFiM2IzMWUzYzhkMjgzMmM2SjEKB2NyZXdfaWQSJgokMGMxNGNhNGMtZjZk
      Yy00ZWNiLTk2MDctODJiYWIxNDFlY2EzSi4KCHRhc2tfa2V5EiIKIDdiNDJkZjNjM2M3NGMyMWM4
      OTQ4MGUwYzA3MDUzODVmSjEKB3Rhc2tfaWQSJgokZGU3ZDg4NjQtNDQ1Yy00MmVkLThlNmMtNDVm
      YzY0ODgwYmM4SjoKEGNyZXdfZmluZ2VycHJpbnQSJgokNTVhNDYxYTQtZTY5NS00NDk3LTlhYTUt
      ODhhMDY1YTkzMDc4SjoKEHRhc2tfZmluZ2VycHJpbnQSJgokZGJlM2VkYzgtNDJlNC00ZDg4LThm
      YTctMzQ0M2U1NTBjZmY3SjsKG3Rhc2tfZmluZ2VycHJpbnRfY3JlYXRlZF9hdBIcChoyMDI1LTA0
      LTAxVDE3OjA1OjA5LjA4NzAzMEo7ChFhZ2VudF9maW5nZXJwcmludBImCiRjZDVlYjg2MC00NzY3
      LTQwMWMtODc0Ni03ZjAxYzEzYjAxYjl6AhgBhQEAAQAA
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1629'
      Content-Type:
      - application/x-protobuf
      User-Agent:
      - OTel-OTLP-Exporter-Python/1.31.1
    method: POST
    uri: https://telemetry.crewai.com:4319/v1/traces
  response:
    body:
      string: "\n\0"
    headers:
      Content-Length:
      - '2'
      Content-Type:
      - application/x-protobuf
      Date:
      - Tue, 01 Apr 2025 20:05:39 GMT
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Assess the quality of the task
      completed based on the description, expected output, and actual results.\n\nTask
      Description:\nPerform a search on specific topics.\n\nExpected Output:\nA list
      of relevant URLs based on the search query.\n\nActual Output:\nI now can give
      a great answer  \nFinal Answer: I apologize for any misunderstanding, but as
      an AI language model without the ability to access external databases or search
      the web in real-time, I''m unable to perform a live search or provide URLs for
      content directly from the internet. However, I can assist you in crafting a
      strategic approach for conducting effective searches on specific topics using
      reliable sources, keywords, and search engines. If you need help with that,
      please let me know!\n\nPlease provide:\n- Bullet points suggestions to improve
      future similar tasks\n- A score from 0 to 10 evaluating on completion, quality,
      and overall performance- Entities extracted from the task output, if any, their
      type, description, and relationships"}], "model": "gpt-4o", "tool_choice": {"type":
      "function", "function": {"name": "TaskEvaluation"}}, "tools": [{"type": "function",
      "function": {"name": "TaskEvaluation", "description": "Correctly extracted `TaskEvaluation`
      with all the required parameters with correct types", "parameters": {"$defs":
      {"Entity": {"properties": {"name": {"description": "The name of the entity.",
      "title": "Name", "type": "string"}, "type": {"description": "The type of the
      entity.", "title": "Type", "type": "string"}, "description": {"description":
      "Description of the entity.", "title": "Description", "type": "string"}, "relationships":
      {"description": "Relationships of the entity.", "items": {"type": "string"},
      "title": "Relationships", "type": "array"}}, "required": ["name", "type", "description",
      "relationships"], "title": "Entity", "type": "object"}}, "properties": {"suggestions":
      {"description": "Suggestions to improve future similar tasks.", "items": {"type":
      "string"}, "title": "Suggestions", "type": "array"}, "quality": {"description":
      "A score from 0 to 10 evaluating on completion, quality, and overall performance,
      all taking into account the task description, expected output, and the result
      of the task.", "title": "Quality", "type": "number"}, "entities": {"description":
      "Entities extracted from the task output.", "items": {"$ref": "#/$defs/Entity"},
      "title": "Entities", "type": "array"}}, "required": ["entities", "quality",
      "suggestions"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2527'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Hxm6ignpjzUPY4_F0hNOxDI6blf0OOBnlpX09HJLkXw-1743537931-1.0.1.1-EnMojyC4HcsGaIfLZ3AM11JeKT5P2fCrPy4P_cEuqem7t6aJ66exdhSjbXn7cY_0WGDzFZMXOd2FiX1cdOOotV7bTaiKamm_kbxZ2AeH0DI;
        _cfuvid=0tT0dhP6be3yJlOYI.zGaiYhO_s63uZ7L9h2mjFuTUI-1743537931401-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-BHc9ahjtEibNglNtBQy3qNxr3yCs9\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1743537938,\n  \"model\": \"gpt-4o-2024-08-06\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": null,\n        \"tool_calls\": [\n          {\n
      \           \"id\": \"call_lxeig0on6rCqgFytfc2dUtJc\",\n            \"type\":
      \"function\",\n            \"function\": {\n              \"name\": \"TaskEvaluation\",\n
      \             \"arguments\": \"{\\\"suggestions\\\":[\\\"Specify if accessing
      external databases or search engines is necessary for the task to avoid assigning
      tasks that cannot be completed with internal tools.\\\",\\\"Consider using available
      tools or plugins that enable searching capabilities if necessary for task completion.\\\",\\\"Clarify
      the role and capabilities of the AI to set realistic expectations for the task
      output.\\\"],\\\"quality\\\":2,\\\"entities\\\":[{\\\"name\\\":\\\"AI language
      model\\\",\\\"type\\\":\\\"system\\\",\\\"description\\\":\\\"An AI model designed
      to understand and generate human language\\\",\\\"relationships\\\":[]},{\\\"name\\\":\\\"external
      databases\\\",\\\"type\\\":\\\"resource\\\",\\\"description\\\":\\\"Databases
      available outside the AI's operational environment\\\",\\\"relationships\\\":[]},{\\\"name\\\":\\\"search
      engines\\\",\\\"type\\\":\\\"tool\\\",\\\"description\\\":\\\"Online tools that
      search the internet for relevant information based on queries\\\",\\\"relationships\\\":[\\\"external
      databases\\\"]},{\\\"name\\\":\\\"keywords\\\",\\\"type\\\":\\\"concept\\\",\\\"description\\\":\\\"Words
      or phrases used to perform a search query in search engines\\\",\\\"relationships\\\":[\\\"search
      engines\\\"]},{\\\"name\\\":\\\"reliable sources\\\",\\\"type\\\":\\\"resource\\\",\\\"description\\\":\\\"Credible
      and trustworthy origins of information used for searching topics\\\",\\\"relationships\\\":[\\\"search
      engines\\\",\\\"external databases\\\"]}]}\"\n            }\n          }\n        ],\n
      \       \"refusal\": null,\n        \"annotations\": []\n      },\n      \"logprobs\":
      null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
      378,\n    \"completion_tokens\": 215,\n    \"total_tokens\": 593,\n    \"prompt_tokens_details\":
      {\n      \"cached_tokens\": 0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\":
      {\n      \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
      0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
      \"default\",\n  \"system_fingerprint\": \"fp_898ac29719\"\n}\n"
    headers:
      CF-RAY:
      - 929ab3d598ba7dee-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '4023'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '50000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '49999'
      x-ratelimit-remaining-tokens:
      - '149999749'
      x-ratelimit-reset-requests:
      - 1ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_f2c3d4ff94af0697f09d804f39fda64e
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["AI language model(system): An AI model designed to understand
      and generate human language"], "model": "text-embedding-3-small", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '168'
      content-type:
      - application/json
      cookie:
      - __cf_bm=V7Ai6kTzure7ZHk8IX17a15p.gWeVtEIiLotdStYBRo-1743537936-1.0.1.1-TBIsRVaz6eWUMIWyet8Zw_P6HtLDDOql78aip91IzZPNUUxESD7kX1O2XR3HaLq4ugeNnViH18TPBQ0ds14IyZneU.aHcrI.u5GFz9YvlWk;
        _cfuvid=WjlP.31F0xkBcHoootamO.xqZIkVNRPL3BnFKAqqPfk-1743537936351-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      15,\n    \"total_tokens\": 15\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab3efe8a87dfe-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:43 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '538'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-679d696b6b-wkpn5
      x-envoy-upstream-service-time:
      - '491'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999977'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_3a323607f5f52fa9e13a9c23984abb08
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["external databases(resource): Databases available outside the
      AI''s operational environment"], "model": "text-embedding-3-small", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '169'
      content-type:
      - application/json
      cookie:
      - __cf_bm=V7Ai6kTzure7ZHk8IX17a15p.gWeVtEIiLotdStYBRo-1743537936-1.0.1.1-TBIsRVaz6eWUMIWyet8Zw_P6HtLDDOql78aip91IzZPNUUxESD7kX1O2XR3HaLq4ugeNnViH18TPBQ0ds14IyZneU.aHcrI.u5GFz9YvlWk;
        _cfuvid=WjlP.31F0xkBcHoootamO.xqZIkVNRPL3BnFKAqqPfk-1743537936351-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      13,\n    \"total_tokens\": 13\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab3f68f4a7dfe-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '885'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-66c7bcb46d-fnrfn
      x-envoy-upstream-service-time:
      - '843'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999978'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_b80a37ee2c4035ecdbbb5b2d8809f378
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["search engines(tool): Online tools that search the internet
      for relevant information based on queries"], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '180'
      content-type:
      - application/json
      cookie:
      - __cf_bm=V7Ai6kTzure7ZHk8IX17a15p.gWeVtEIiLotdStYBRo-1743537936-1.0.1.1-TBIsRVaz6eWUMIWyet8Zw_P6HtLDDOql78aip91IzZPNUUxESD7kX1O2XR3HaLq4ugeNnViH18TPBQ0ds14IyZneU.aHcrI.u5GFz9YvlWk;
        _cfuvid=WjlP.31F0xkBcHoootamO.xqZIkVNRPL3BnFKAqqPfk-1743537936351-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"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\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      16,\n    \"total_tokens\": 16\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab3fd9dc37dfe-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '447'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-75bccdc8f-gvhp2
      x-envoy-upstream-service-time:
      - '322'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999975'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_2a372cc43027027e25a34df36aa5a277
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["keywords(concept): Words or phrases used to perform a search
      query in search engines"], "model": "text-embedding-3-small", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '163'
      content-type:
      - application/json
      cookie:
      - __cf_bm=V7Ai6kTzure7ZHk8IX17a15p.gWeVtEIiLotdStYBRo-1743537936-1.0.1.1-TBIsRVaz6eWUMIWyet8Zw_P6HtLDDOql78aip91IzZPNUUxESD7kX1O2XR3HaLq4ugeNnViH18TPBQ0ds14IyZneU.aHcrI.u5GFz9YvlWk;
        _cfuvid=WjlP.31F0xkBcHoootamO.xqZIkVNRPL3BnFKAqqPfk-1743537936351-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      16,\n    \"total_tokens\": 16\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab40219da7dfe-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:46 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '88'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-57bb7bc5f9-644wk
      x-envoy-upstream-service-time:
      - '61'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_63144890ccee28dc5a845d0324d87e26
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["reliable sources(resource): Credible and trustworthy origins
      of information used for searching topics"], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '180'
      content-type:
      - application/json
      cookie:
      - __cf_bm=V7Ai6kTzure7ZHk8IX17a15p.gWeVtEIiLotdStYBRo-1743537936-1.0.1.1-TBIsRVaz6eWUMIWyet8Zw_P6HtLDDOql78aip91IzZPNUUxESD7kX1O2XR3HaLq4ugeNnViH18TPBQ0ds14IyZneU.aHcrI.u5GFz9YvlWk;
        _cfuvid=WjlP.31F0xkBcHoootamO.xqZIkVNRPL3BnFKAqqPfk-1743537936351-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-3-small\",\n  \"usage\": {\n    \"prompt_tokens\":
      17,\n    \"total_tokens\": 17\n  }\n}\n"
    headers:
      CF-RAY:
      - 929ab4049bc17dfe-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 01 Apr 2025 20:05:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '529'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-774948c5f9-kfnvs
      x-envoy-upstream-service-time:
      - '517'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999974'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_2e320a9c34a134f63054cf942d2dc847
    http_version: HTTP/1.1
    status_code: 200
version: 1
