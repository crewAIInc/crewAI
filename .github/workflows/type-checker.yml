name: Run Type Checks

on: [pull_request]

permissions:
  contents: read

jobs:
  type-checker-matrix:
    name: type-checker (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper diff

      - name: Restore global uv cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
            .venv
          key: uv-main-py${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-main-py${{ matrix.python-version }}-

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.4"
          python-version: ${{ matrix.python-version }}
          enable-cache: false

      - name: Install dependencies
        run: uv sync --all-groups --all-extras

      - name: Get changed Python files
        id: changed-files
        run: |
          # Get the list of changed Python files compared to the base branch
          echo "Fetching changed files..."
          git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }}...HEAD -- '*.py' > changed_files.txt

          # Filter for files in src/ directory only (excluding tests/)
          grep -E "^src/" changed_files.txt > filtered_changed_files.txt || true

          # Check if there are any changed files
          if [ -s filtered_changed_files.txt ]; then
            echo "Changed Python files in src/:"
            cat filtered_changed_files.txt
            echo "has_changes=true" >> $GITHUB_OUTPUT
            # Convert newlines to spaces for mypy command
            echo "files=$(cat filtered_changed_files.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            echo "No Python files changed in src/"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Run type checks on changed files
        if: steps.changed-files.outputs.has_changes == 'true'
        run: |
          echo "Running mypy on changed files with Python ${{ matrix.python-version }}..."
          uv run mypy ${{ steps.changed-files.outputs.files }}

      - name: No files to check
        if: steps.changed-files.outputs.has_changes == 'false'
        run: echo "No Python files in src/ were modified - skipping type checks"

      - name: Save uv caches
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
            .venv
          key: uv-main-py${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}

  # Summary job to provide single status for branch protection
  type-checker:
    name: type-checker
    runs-on: ubuntu-latest
    needs: type-checker-matrix
    if: always()
    steps:
      - name: Check matrix results
        run: |
          if [ "${{ needs.type-checker-matrix.result }}" == "success" ] || [ "${{ needs.type-checker-matrix.result }}" == "skipped" ]; then
            echo "✅ All type checks passed"
          else
            echo "❌ Type checks failed"
            exit 1
          fi
